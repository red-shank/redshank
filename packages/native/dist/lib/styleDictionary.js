const styleDictionary = {
    properties: {
        // primitive values
        width: { type: 'inherit' },
        height: { type: 'inherit' },
        position: { type: 'inherit' },
        paddingBottom: { type: 'inherit' },
        paddingHorizontal: { type: 'inherit' },
        paddingLeft: { type: 'inherit' },
        paddingRight: { type: 'inherit' },
        paddingTop: { type: 'inherit' },
        paddingVertical: { type: 'inherit' },
        margin: { type: 'inherit' },
        marginBottom: { type: 'inherit' },
        marginHorizontal: { type: 'inherit' },
        marginLeft: { type: 'inherit' },
        marginRight: { type: 'inherit' },
        marginTop: { type: 'inherit' },
        marginVertical: { type: 'inherit' },
        bottom: { type: 'inherit' },
        left: { type: 'inherit' },
        right: { type: 'inherit' },
        top: { type: 'inherit' },
        flex: { type: 'inherit' },
        flexGrow: { type: 'inherit' },
        flexShrink: { type: 'inherit' },
        flexBasis: { type: 'inherit' },
        flexWrap: { type: 'inherit' },
        flexDirection: { type: 'inherit' },
        justifyContent: { type: 'inherit' },
        alignItems: { type: 'inherit' },
        alignSelf: { type: 'inherit' },
        overflow: { type: 'inherit' },
        zIndex: { type: 'inherit' },
        display: { type: 'inherit' },
        backfaceVisibility: { type: 'inherit' },
        borderBottomWidth: { type: 'inherit' },
        borderLeftWidth: { type: 'inherit' },
        borderStyle: { type: 'inherit' },
        borderRightWidth: { type: 'inherit' },
        borderTopWidth: { type: 'inherit' },
        borderWidth: { type: 'inherit' },
        decomposedMatrix: { type: 'inherit' },
        elevation: { type: 'inherit' },
        fontStyle: { type: 'inherit' },
        fontVariant: { type: 'inherit' },
        fontWeight: { type: 'inherit' },
        lineHeight: { type: 'inherit' },
        letterSpacing: { type: 'inherit' },
        opacity: { type: 'inherit' },
        rotation: { type: 'inherit' },
        scale: { type: 'inherit' },
        scaleX: { type: 'inherit' },
        scaleY: { type: 'inherit' },
        translateY: { type: 'inherit' },
        translateX: { type: 'inherit' },
        transformMatrix: { type: 'inherit' },
        transform: { type: 'inherit' },
        textShadowRadius: { type: 'inherit' },
        textShadowOffset: { type: 'inherit' },
        textAlignVertical: { type: 'inherit' },
        textAlign: { type: 'inherit' },
        shadowRadius: { type: 'inherit' },
        shadowOpacity: { type: 'inherit' },
        shadowOffset: { type: 'inherit' },
        // Number values
        p: { type: 'number' },
        pb: { type: 'number' },
        pl: { type: 'number' },
        pr: { type: 'number' },
        py: { type: 'number' },
        pt: { type: 'number' },
        px: { type: 'number' },
        m: { type: 'number' },
        mb: { type: 'number' },
        ml: { type: 'number' },
        mr: { type: 'number' },
        mt: { type: 'number' },
        mx: { type: 'number' },
        my: { type: 'number' },
        gap: { type: 'number' },
        // border radius
        borderRadius: { type: 'number' },
        borderBottomRadius: {
            type: 'number',
            resolve: (value, acc) => {
                acc.borderBottomLeftRadius = value;
                acc.borderBottomRightRadius = value;
            }
        },
        borderTopRadius: {
            type: 'number',
            resolve: (value, acc) => {
                acc.borderTopLeftRadius = value;
                acc.borderTopRightRadius = value;
            }
        },
        borderBottomLeftRadius: { type: 'number' },
        borderBottomRightRadius: { type: 'number' },
        borderTopLeftRadius: { type: 'number' },
        borderTopRightRadius: { type: 'number' },
        // Color values
        backgroundColor: { type: 'color' },
        borderColor: { type: 'color' },
        borderBottomColor: { type: 'color' },
        borderLeftColor: { type: 'color' },
        borderRightColor: { type: 'color' },
        borderTopColor: { type: 'color' },
        shadowColor: { type: 'color' },
        textShadowColor: { type: 'color' },
        background: { type: 'color' },
        color: { type: 'color' },
        bg: { type: 'color' },
        fontSize: { type: 'string' },
        fontFamily: { type: 'string' }
    }
};
export const resolverDictionaryKey = {
    borderRadius: 'borderRadius',
    color: 'color',
    backgroundColor: 'backgroundColor',
    borderBottomColor: 'borderBottomColor',
    borderBottomLeftRadius: 'borderBottomLeftRadius',
    borderBottomRightRadius: 'borderBottomRightRadius',
    borderColor: 'borderColor',
    borderLeftColor: 'borderLeftColor',
    borderRightColor: 'borderRightColor',
    borderTopColor: 'borderTopColor',
    borderBottomRadius: 'borderBottomRadius',
    borderTopRadius: 'borderTopRadius',
    borderTopLeftRadius: 'borderTopLeftRadius',
    borderTopRightRadius: 'borderTopRightRadius',
    fontSize: 'fontSize',
    m: 'margin',
    mb: 'marginBottom',
    ml: 'marginLeft',
    mr: 'marginRight',
    mt: 'marginTop',
    mx: 'marginHorizontal',
    my: 'marginVertical',
    p: 'padding',
    pb: 'paddingBottom',
    pl: 'paddingLeft',
    pr: 'paddingRight',
    pt: 'paddingTop',
    px: 'paddingHorizontal',
    py: 'paddingVertical',
    gap: 'gap',
    zIndex: 'zIndex',
    shadowColor: 'shadowColor',
    textShadowColor: 'textShadowColor',
    background: 'backgroundColor',
    bg: 'backgroundColor'
};
export default styleDictionary;
